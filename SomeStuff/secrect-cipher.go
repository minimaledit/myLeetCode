/*
Вы работаете в секретной лаборатории, где разрабатываются новые методы шифрования.
Ваша задача — создать функцию, которая будет обрабатывать массив целых чисел и генерировать "секретный код" на основе определенных правил.

Входные данные:
Функция принимает массив целых чисел фиксированного размера — 5 значений, и возвращает строку, представляющую сгенерированный код.

Генерация секретного кода:
1) В начале кода должно находиться минимальное значение массива.
2) В конце кода должно находиться максимальное значение массива.
3) Между максимальным и минимальными значениями, должны быть расположены все значения, перед которыми должна быть проставлена буква.
    - Если элемент четный, перед ним добавляется префикс "E" (от слова Even — четный).
    - Если элемент нечетный, перед ним добавляется префикс "O" (от слова Odd — нечетный).

Пример:
Для входного массива [3, 8, 1, 8, 1]:

Минимальное значение: 1
Максимальное значение: 8
Префиксы: O3, E8, O1

Сгенерированный код будет: 1O3E8O1E8O18
*/

import (
	"fmt"
	"math"
	"strconv"
)

func max(n, m int) int {
	if n > m {
		return n
	}
	return m
}

func min(n, m int) int {
	if n < m {
		return n
	}
	return m
}

func oddEven(num int) string {
	if num%2 == 0 {
		return "E"
	}
	return "O"
}

func converter(arr [5]int) (cipher string) {
	mx, mn := math.MinInt, math.MaxInt
	for _, val := range arr {
		mx = max(mx, val)
		mn = min(mn, val)
	}
	cipher += strconv.Itoa(mn)
	for _, val := range arr {
		cipher += oddEven(val) + strconv.Itoa(val)
	}
	cipher += strconv.Itoa(mx)
	return
}

func main() {
	fmt.Println("Секретный код:", converter([5]int{3, 8, 1, 8, 1}))
}
